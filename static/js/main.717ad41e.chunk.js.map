{"version":3,"sources":["components/TutorialHeader/TutorialHeader.jsx","components/TutorialHeader/index.jsx","content/LandingPage/LandingPage.jsx","content/LandingPage/index.jsx","content/RepoPage/RepoTable.jsx","content/RepoPage/RepoPage.jsx","content/RepoPage/index.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["TutorialHeader","aria-label","element","Link","to","prefix","LandingPage","className","Breadcrumb","noTrailingSlash","BreadcrumbItem","href","Tabs","selected","triggerHref","role","Tab","tabIndex","label","Button","src","process","alt","RepoTable","dataRows","dataHeaders","DataTable","rows","headers","render","getHeaderProps","getRowProps","tableProps","getTableProps","TableContainer","title","description","Table","isSortable","overflowMenuOnHover","shouldShowBorder","size","stickyHeader","useStaticWidth","useZebraStyles","TableHead","TableRow","TableExpandHeader","map","header","headerProps","TableHeader","isSortHeader","key","onClick","sortDirection","TableBody","row","rowProps","Fragment","id","TableExpandRow","ariaLabel","disabled","isExpanded","isSelected","onExpand","cells","cell","TableCell","value","TableExpandedRow","colSpan","length","defaultProps","RepoPage","name","createdAt","updatedAt","issueCount","stars","links","App","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.717ad41e.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Header,\n  HeaderName,\n  HeaderNavigation,\n  HeaderMenuItem,\n  SkipToContent,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n} from 'carbon-components-react/lib/components/UIShell';\nimport { Link } from 'react-router-dom';\nimport Notification20 from '@carbon/icons-react/lib/notification/20';\nimport UserAvatar20 from '@carbon/icons-react/lib/user--avatar/20';\nimport Switcher20 from '@carbon/icons-react/lib/switcher/20';\n\nfunction TutorialHeader() {\n  return (\n    <Header aria-label=\"Carbon Tutorial\">\n      <SkipToContent />\n      <HeaderName element={Link} to=\"/\" prefix=\"IBM\">\n        Carbon Tutorial\n      </HeaderName>\n      <HeaderNavigation aria-label=\"Carbon Tutorial\">\n        <HeaderMenuItem element={Link} to=\"/repos\">\n          Repositories\n        </HeaderMenuItem>\n      </HeaderNavigation>\n      <HeaderGlobalBar>\n        <HeaderGlobalAction aria-label=\"Notifications\">\n          <Notification20 />\n        </HeaderGlobalAction>\n        <HeaderGlobalAction aria-label=\"User Avatar\">\n          <UserAvatar20 />\n        </HeaderGlobalAction>\n        <HeaderGlobalAction aria-label=\"App switcher\">\n          <Switcher20 />\n        </HeaderGlobalAction>\n      </HeaderGlobalBar>\n    </Header>\n  );\n}\n\nexport default TutorialHeader;\n","import TutorialHeader from './TutorialHeader';\n\nexport default TutorialHeader;\n","import React from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Tabs,\n  Tab,\n} from 'carbon-components-react';\n\nfunction LandingPage() {\n  return (\n    <div className=\"bx--grid bx--grid--full-width landing-page\">\n      <div className=\"bx--row landing-page__banner\">\n        <div className=\"bx--col-lg-16\">\n          <Breadcrumb noTrailingSlash aria-label=\"Page navigation\">\n            <BreadcrumbItem>\n              <a href=\"/\">Getting started</a>\n            </BreadcrumbItem>\n          </Breadcrumb>\n          <h1 className=\"landing-page__heading\">\n            Design &amp; build with Carbon\n          </h1>\n        </div>\n      </div>\n      <div className=\"bx--row landing-page__r2\">\n        <div className=\"bx--col bx--no-gutter\">\n          <Tabs\n            selected={0}\n            triggerHref=\"#\"\n            role=\"navigation\"\n            aria-label=\"Tab navigation\"\n          >\n            <Tab href=\"#\" role=\"presentation\" tabIndex={0} label=\"About\">\n              <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n                <div className=\"bx--row landing-page__tab-content\">\n                  <div className=\"bx--col-md-4 bx--col-lg-7\">\n                    <h2 className=\"landing-page__subheading\">\n                      What is Carbon?\n                    </h2>\n                    <p className=\"landing-page__p\">\n                      Carbon is IBMâ€™s open-source design system for digital\n                      products and experiences. With the IBM Design Language as\n                      its foundation, the system consists of working code,\n                      design tools and resources, human interface guidelines,\n                      and a vibrant community of contributors.\n                    </p>\n                    <Button>Learn more</Button>\n                  </div>\n                  <div className=\"bx--col-md-4 bx--offset-lg-1 bx--col-lg-8\">\n                    <img\n                      className=\"landing-page__illo\"\n                      src={`${process.env.PUBLIC_URL}/tab-illo.png`}\n                      alt=\"Carbon illustration\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </Tab>\n            <Tab href=\"#\" role=\"presentation\" tabIndex={0} label=\"Design\">\n              <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n                <div className=\"bx--row landing-page__tab-content\">\n                  <div className=\"bx--col-lg-16\">\n                    Rapidly build beautiful and accessible experiences. The\n                    Carbon kit contains all resources you need to get started.\n                  </div>\n                </div>\n              </div>\n            </Tab>\n            <Tab href=\"#\" role=\"presentation\" tabIndex={0} label=\"Develop\">\n              <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n                <div className=\"bx--row landing-page__tab-content\">\n                  <div className=\"bx--col-lg-16\">\n                    Carbon provides styles and components in Vanilla, React,\n                    Angular, and Vue for anyone building on the web.\n                  </div>\n                </div>\n              </div>\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n      <div className=\"bx--row landing-page__r3\">\n        <div className=\"bx--col-md-4 bx--col-lg-4\">\n          <h3 className=\"landing-page__label\">The Principles</h3>\n        </div>\n        <div className=\"bx--col-md-4 bx--col-lg-4\">Carbon is Open</div>\n        <div className=\"bx--col-md-4 bx--col-lg-4\">Carbon is Modular</div>\n        <div className=\"bx--col-md-4 bx--col-lg-4\">Carbon is Consistent</div>\n      </div>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import LandingPage from './LandingPage';\n\nexport default LandingPage;\n","import React from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableExpandHeader,\n  TableHeader,\n  TableBody,\n  TableExpandRow,\n  TableCell,\n  TableExpandedRow,\n} from 'carbon-components-react';\nimport PropTypes from 'prop-types';\n\nfunction RepoTable({ dataRows, dataHeaders }) {\n  return (\n    <DataTable\n      rows={dataRows}\n      headers={dataHeaders}\n      render={({\n        rows,\n        headers,\n        getHeaderProps,\n        getRowProps,\n        getTableProps,\n      }) => {\n        const tableProps = getTableProps();\n\n        return (\n          <TableContainer\n            title=\"Carbon Repositories\"\n            description=\"A collection of public Carbon repositories.\"\n          >\n            <Table\n              isSortable={tableProps.isSortable}\n              overflowMenuOnHover={tableProps.overflowMenuOnHover}\n              shouldShowBorder={tableProps.shouldShowBorder}\n              size={tableProps.size}\n              stickyHeader={tableProps.stickyHeader}\n              useStaticWidth={tableProps.useStaticWidth}\n              useZebraStyles={tableProps.useZebraStyles}\n            >\n              <TableHead>\n                <TableRow>\n                  <TableExpandHeader />\n                  {headers.map((header) => {\n                    const headerProps = getHeaderProps({ header });\n\n                    return (\n                      <TableHeader\n                        isSortHeader={headerProps.isSortHeader}\n                        isSortable={headerProps.isSortable}\n                        key={headerProps.key}\n                        onClick={headerProps.onClick}\n                        sortDirection={headerProps.sortDirection}\n                      >\n                        {header.header}\n                      </TableHeader>\n                    );\n                  })}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row) => {\n                  const rowProps = getRowProps({ row });\n\n                  return (\n                    <React.Fragment key={row.id}>\n                      <TableExpandRow\n                        ariaLabel={rowProps.ariaLabel}\n                        disabled={rowProps.disabled}\n                        isExpanded={rowProps.isExpanded}\n                        isSelected={rowProps.isSelected}\n                        key={rowProps.key}\n                        onExpand={rowProps.onExpand}\n                      >\n                        {row.cells.map((cell) => {\n                          return (\n                            <TableCell key={cell.id}>{cell.value}</TableCell>\n                          );\n                        })}\n                      </TableExpandRow>\n                      <TableExpandedRow colSpan={headers.length + 1}>\n                        <p>Row description</p>\n                      </TableExpandedRow>\n                    </React.Fragment>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        );\n      }}\n    />\n  );\n}\n\nRepoTable.propTypes = {\n  dataRows: PropTypes.arrayOf(PropTypes.object),\n  dataHeaders: PropTypes.arrayOf(PropTypes.object),\n};\n\nRepoTable.defaultProps = {\n  dataRows: [],\n  dataHeaders: [],\n};\n\nexport default RepoTable;\n","import React from 'react';\nimport RepoTable from './RepoTable';\n\nfunction RepoPage() {\n  const dataHeaders = [\n    {\n      key: 'name',\n      header: 'Name',\n    },\n    {\n      key: 'createdAt',\n      header: 'Created',\n    },\n    {\n      key: 'updatedAt',\n      header: 'Updated',\n    },\n    {\n      key: 'issueCount',\n      header: 'Open Issues',\n    },\n    {\n      key: 'stars',\n      header: 'Stars',\n    },\n    {\n      key: 'links',\n      header: 'Links',\n    },\n  ];\n\n  const dataRows = [\n    {\n      id: '1',\n      name: 'Repo 1',\n      createdAt: 'Date',\n      updatedAt: 'Date',\n      issueCount: '123',\n      stars: '456',\n      links: 'Links',\n    },\n    {\n      id: '2',\n      name: 'Repo 2',\n      createdAt: 'Date',\n      updatedAt: 'Date',\n      issueCount: '123',\n      stars: '456',\n      links: 'Links',\n    },\n    {\n      id: '3',\n      name: 'Repo 3',\n      createdAt: 'Date',\n      updatedAt: 'Date',\n      issueCount: '123',\n      stars: '456',\n      links: 'Links',\n    },\n  ];\n\n  return (\n    <div className=\"bx--grid bx--grid--full-width bx--grid--no-gutter repo-page\">\n      <div className=\"bx--row repo-page__r1\">\n        <div className=\"bx--col-lg-16\">\n          <RepoTable dataHeaders={dataHeaders} dataRows={dataRows} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RepoPage;\n","import RepoPage from './RepoPage';\n\nexport default RepoPage;\n","import React from 'react';\nimport './app.scss';\nimport { Content } from 'carbon-components-react/lib/components/UIShell';\nimport { Route, Routes } from 'react-router-dom';\nimport TutorialHeader from './components/TutorialHeader';\nimport LandingPage from './content/LandingPage';\nimport RepoPage from './content/RepoPage';\n\nfunction App() {\n  return (\n    <>\n      <TutorialHeader />\n      <Content>\n        <Routes>\n          <Route path=\"/\" element={<LandingPage />} />\n          <Route path=\"/repos\" element={<RepoPage />} />\n        </Routes>\n      </Content>\n    </>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-console */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((params) => {\n      const registration = params;\n\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'core-js/modules/es.array.includes';\nimport 'core-js/modules/es.array.fill';\nimport 'core-js/modules/es.string.includes';\nimport 'core-js/modules/es.string.trim';\nimport 'core-js/modules/es.object.values';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}